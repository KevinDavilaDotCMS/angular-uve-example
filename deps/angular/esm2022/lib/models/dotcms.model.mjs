/* eslint-disable @typescript-eslint/no-explicit-any */
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"dotcms.model.js","sourceRoot":"","sources":["../../../../../../../libs/sdk/angular/src/lib/models/dotcms.model.ts"],"names":[],"mappings":"AAAA,uDAAuD","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport interface DotCMSPageAsset {\n    canCreateTemplate: boolean;\n    containers: DotCMSPageAssetContainer;\n    layout: DotCMSLayout;\n    page: DotCMSPage;\n    site: DotCMSSite;\n    template: DotCMSTemplate;\n    viewAs: DotCMSViewAs;\n    vanityUrl?: {\n        pattern: string;\n        vanityUrlId: string;\n        url: string;\n        siteId: string;\n        languageId: number;\n        forwardTo: string;\n        response: number;\n        order: number;\n        temporaryRedirect: boolean;\n        permanentRedirect: boolean;\n        forward: boolean;\n    };\n}\n\nexport interface DotPageAssetLayoutRow {\n    identifier: number;\n    value?: string;\n    id?: string;\n    columns: DotPageAssetLayoutColumn[];\n    styleClass?: string;\n}\n\nexport interface DotPageAssetLayoutColumn {\n    preview: boolean;\n    containers: DotCMSContainer[];\n    widthPercent: number;\n    width: number;\n    leftOffset: number;\n    left: number;\n    styleClass?: string;\n}\n\nexport interface DotCMSPageAssetContainer {\n    [key: string]: {\n        container: DotCMSContainer;\n        containerStructures: DotCMSContainerStructure[];\n        contentlets: {\n            [key: string]: DotCMSContentlet[];\n        };\n    };\n}\n\nexport interface DotCMSContainer {\n    identifier: string;\n    uuid: string;\n    iDate: number;\n    type: string;\n    owner?: string;\n    inode: string;\n    source: string;\n    title: string;\n    friendlyName: string;\n    modDate: number;\n    modUser: string;\n    sortOrder: number;\n    showOnMenu: boolean;\n    code?: string;\n    maxContentlets: number;\n    useDiv: boolean;\n    sortContentletsBy?: string;\n    preLoop: string;\n    postLoop: string;\n    staticify: boolean;\n    luceneQuery?: string;\n    notes: string;\n    languageId?: number;\n    path?: string;\n    live: boolean;\n    locked: boolean;\n    working: boolean;\n    deleted: boolean;\n    name: string;\n    archived: boolean;\n    permissionId: string;\n    versionId: string;\n    versionType: string;\n    permissionType: string;\n    categoryId: string;\n    idate: number;\n    new: boolean;\n    acceptTypes: string;\n    contentlets: DotCMSContentlet[];\n    parentPermissionable: DotCMSSiteParentPermissionable;\n}\n\nexport interface DotCMSContentlet {\n    archived: boolean;\n    baseType: string;\n    deleted?: boolean;\n    binary?: string;\n    binaryContentAsset?: string;\n    binaryVersion?: string;\n    contentType: string;\n    file?: string;\n    folder: string;\n    hasLiveVersion?: boolean;\n    hasTitleImage: boolean;\n    host: string;\n    hostName: string;\n    identifier: string;\n    inode: string;\n    image?: string;\n    languageId: number;\n    language?: string;\n    live: boolean;\n    locked: boolean;\n    mimeType?: string;\n    modDate: string;\n    modUser: string;\n    modUserName: string;\n    owner: string;\n    sortOrder: number;\n    stInode: string;\n    title: string;\n    titleImage: string;\n    text?: string;\n    url: string;\n    working: boolean;\n    body?: string;\n    contentTypeIcon?: string;\n    variant?: string;\n    __icon__?: string;\n    [key: string]: any; // This is a catch-all for any other custom properties that might be on the contentlet.\n}\n\nexport interface DotcmsNavigationItem {\n    code?: any;\n    folder: string;\n    children?: DotcmsNavigationItem[];\n    host: string;\n    languageId: number;\n    href: string;\n    title: string;\n    type: string;\n    hash: number;\n    target: string;\n    order: number;\n}\n\ninterface DotCMSTemplate {\n    iDate: number;\n    type: string;\n    owner: string;\n    inode: string;\n    identifier: string;\n    source: string;\n    title: string;\n    friendlyName: string;\n    modDate: number;\n    modUser: string;\n    sortOrder: number;\n    showOnMenu: boolean;\n    image: string;\n    drawed: boolean;\n    drawedBody: string;\n    theme: string;\n    anonymous: boolean;\n    template: boolean;\n    name: string;\n    live: boolean;\n    archived: boolean;\n    locked: boolean;\n    working: boolean;\n    permissionId: string;\n    versionId: string;\n    versionType: string;\n    deleted: boolean;\n    permissionType: string;\n    categoryId: string;\n    idate: number;\n    new: boolean;\n    canEdit: boolean;\n}\n\ninterface DotCMSPage {\n    template: string;\n    modDate: number;\n    metadata: string;\n    cachettl: string;\n    pageURI: string;\n    title: string;\n    type: string;\n    showOnMenu: string;\n    httpsRequired: boolean;\n    inode: string;\n    disabledWYSIWYG: any[];\n    seokeywords: string;\n    host: string;\n    lastReview: number;\n    working: boolean;\n    locked: boolean;\n    stInode: string;\n    friendlyName: string;\n    live: boolean;\n    owner: string;\n    identifier: string;\n    nullProperties: any[];\n    friendlyname: string;\n    pagemetadata: string;\n    languageId: number;\n    url: string;\n    seodescription: string;\n    modUserName: string;\n    folder: string;\n    deleted: boolean;\n    sortOrder: number;\n    modUser: string;\n    pageUrl: string;\n    workingInode: string;\n    shortyWorking: string;\n    canEdit: boolean;\n    canRead: boolean;\n    canLock: boolean;\n    lockedOn: number;\n    lockedBy: string;\n    lockedByName: string;\n    liveInode: string;\n    shortyLive: string;\n}\n\ninterface DotCMSViewAs {\n    language: {\n        id: number;\n        languageCode: string;\n        countryCode: string;\n        language: string;\n        country: string;\n    };\n    mode: string;\n}\n\ninterface DotCMSLayout {\n    pageWidth: string;\n    width: string;\n    layout: string;\n    title: string;\n    header: boolean;\n    footer: boolean;\n    body: DotPageAssetLayoutBody;\n    sidebar: DotPageAssetLayoutSidebar;\n}\n\ninterface DotCMSContainerStructure {\n    id: string;\n    structureId: string;\n    containerInode: string;\n    containerId: string;\n    code: string;\n    contentTypeVar: string;\n}\n\ninterface DotPageAssetLayoutSidebar {\n    preview: boolean;\n    containers: DotCMSContainer[];\n    location: string;\n    widthPercent: number;\n    width: string;\n}\n\ninterface DotPageAssetLayoutBody {\n    rows: DotPageAssetLayoutRow[];\n}\n\ninterface DotCMSSite {\n    lowIndexPriority: boolean;\n    name: string;\n    default: boolean;\n    aliases: string;\n    parent: boolean;\n    tagStorage: string;\n    systemHost: boolean;\n    inode: string;\n    versionType: string;\n    structureInode: string;\n    hostname: string;\n    hostThumbnail?: any;\n    owner: string;\n    permissionId: string;\n    permissionType: string;\n    type: string;\n    identifier: string;\n    modDate: number;\n    host: string;\n    live: boolean;\n    indexPolicy: string;\n    categoryId: string;\n    actionId?: any;\n    new: boolean;\n    archived: boolean;\n    locked: boolean;\n    disabledWysiwyg: any[];\n    modUser: string;\n    working: boolean;\n    titleImage: {\n        present: boolean;\n    };\n    folder: string;\n    htmlpage: boolean;\n    fileAsset: boolean;\n    vanityUrl: boolean;\n    keyValue: boolean;\n    structure?: DotCMSSiteStructure;\n    title: string;\n    languageId: number;\n    indexPolicyDependencies: string;\n    contentTypeId: string;\n    versionId: string;\n    lastReview: number;\n    nextReview?: any;\n    reviewInterval?: any;\n    sortOrder: number;\n    contentType: DotCMSSiteContentType;\n}\n\ninterface DotCMSSiteContentType {\n    owner?: any;\n    parentPermissionable: DotCMSSiteParentPermissionable;\n    permissionId: string;\n    permissionType: string;\n}\n\nexport interface DotCMSSiteParentPermissionable {\n    Inode: string;\n    Identifier: string;\n    permissionByIdentifier: boolean;\n    type: string;\n    owner?: any;\n    identifier: string;\n    permissionId: string;\n    parentPermissionable?: any;\n    permissionType: string;\n    inode: string;\n    childrenPermissionable?: any;\n    variantId?: string;\n}\n\ninterface DotCMSSiteStructure {\n    iDate: number;\n    type: string;\n    owner?: any;\n    inode: string;\n    identifier: string;\n    name: string;\n    description: string;\n    defaultStructure: boolean;\n    reviewInterval?: any;\n    reviewerRole?: any;\n    pagedetail?: any;\n    structureType: number;\n    fixed: boolean;\n    system: boolean;\n    velocityVarName: string;\n    urlMapPattern?: any;\n    host: string;\n    folder: string;\n    publishDateVar?: any;\n    expireDateVar?: any;\n    modDate: number;\n    fields: DotCMSSiteField[];\n    widget: boolean;\n    detailPage?: any;\n    fieldsBySortOrder: DotCMSSiteField[];\n    form: boolean;\n    htmlpageAsset: boolean;\n    content: boolean;\n    fileAsset: boolean;\n    persona: boolean;\n    permissionId: string;\n    permissionType: string;\n    live: boolean;\n    categoryId: string;\n    idate: number;\n    new: boolean;\n    archived: boolean;\n    locked: boolean;\n    modUser: string;\n    working: boolean;\n    title: string;\n    versionId: string;\n    versionType: string;\n}\n\ninterface DotCMSSiteField {\n    iDate: number;\n    type: string;\n    owner?: any;\n    inode: string;\n    identifier: string;\n    structureInode: string;\n    fieldName: string;\n    fieldType: string;\n    fieldRelationType?: any;\n    fieldContentlet: string;\n    required: boolean;\n    velocityVarName: string;\n    sortOrder: number;\n    values?: any;\n    regexCheck?: any;\n    hint?: any;\n    defaultValue?: any;\n    indexed: boolean;\n    listed: boolean;\n    fixed: boolean;\n    readOnly: boolean;\n    searchable: boolean;\n    unique: boolean;\n    modDate: number;\n    dataType: string;\n    live: boolean;\n    categoryId: string;\n    idate: number;\n    new: boolean;\n    archived: boolean;\n    locked: boolean;\n    modUser: string;\n    working: boolean;\n    permissionId: string;\n    parentPermissionable?: any;\n    permissionType: string;\n    title: string;\n    versionId: string;\n    versionType: string;\n}\n"]}